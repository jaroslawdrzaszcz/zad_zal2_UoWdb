package repodb.db;

import java.sql.Connection;
import java.sql.SQLException;

import repodb.db.mappers.ResultSetMapper;
import repodb.db.uow.UnitOfWork;
import repodb.domian.PhoneCall;

public class PhoneCallRepository extends RepositoryBase<PhoneCall>{
	
	Connection connection;

	protected String tableName(){
		return "phoneCall";
	}
	
	protected String createTableSql(){
		return "CREATE TABLE phoneCall(id INT GENERATED BY DEFAULT AS IDENTITY, contactId INT,"
			+ "phone VARCHAR(11), callDate VARCHAR(11), callTimeStart VARCHAR(11), callTimeStop VARCHAR(11), description VARCHAR(30))";
	}  	
	protected String deleteSql(){
		return "DELETE FROM phoneCall WHERE id=?";
	}
	protected String insertSql(){
		return "INSERT INTO phoneCall(contactId, phone, callDate, callTimeStart, callTimeStop, description) VALUES(?,?,?,?,?,?)";
	}
	protected String selectAllSql(){
		return "SELECT * FROM phoneCall";
	}
	protected String selectByIdSql(){
		return "SELECT * FROM phoneCall WHERE id=?";
	}
	protected String updateSql(){
		return "UPDATE phoneCall SET contactId=?, phone=?, callDate=?, callTimeStart=?, callTimeStop=?, description=? WHERE id=?";
	}
	
	public PhoneCallRepository(Connection connection, ResultSetMapper<PhoneCall> mapper, UnitOfWork uow) throws SQLException{
		super(connection, mapper, uow);
	}
	
	public Connection getConnection() {
		return connection;
	}
	
	public void setConnection(Connection connection) {
		this.connection = connection;
	}
	@Override
	protected void setupUpdate(PhoneCall phoneCall) throws SQLException {
		update.setInt(1, phoneCall.getContactId());
		update.setString(2, phoneCall.getPhone());
		update.setString(3, phoneCall.getCallDate());
		update.setString(4, phoneCall.getCallTimeStart());
		update.setString(5, phoneCall.getCallTimeStop());
		update.setString(6, phoneCall.getDescription());
		update.setInt(7, phoneCall.getId());
	}
	@Override
	protected void setupInsert(PhoneCall phoneCall) throws SQLException {
		insert.setInt(1, phoneCall.getContactId());
		insert.setString(2, phoneCall.getPhone());
		insert.setString(3, phoneCall.getCallDate());
		insert.setString(4, phoneCall.getCallTimeStart());
		insert.setString(5, phoneCall.getCallTimeStop());
		insert.setString(6, phoneCall.getDescription());
	}

}
